name: Rust
run-name: ${{github.actor}} on ${{github.event_name}}

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:14
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: password
              POSTGRES_DB: postgres
            ports:
              - 5432:5432
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install the Rust toolchain 
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache action
              uses: Swatinem/rust-cache@v2
              with: 
                key: sqlx-${{ env.SQLX_VERSION}}
            - name: Install SQLx CLI
              run: cargo install sqlx-cli 
                --version=${{ env.SQLX_VERSION }}
                --no-default-features 
                --features ${{ env.SQLX_FEATURES }}
                --locked
            
            - name: Install psql
              run: sudo apt-get update && sudo apt-get install postgresql-client -y
            
            - name: Run migrations
              run: SKIP_DOCKER=true ./scripts/init_db.sh

            - name: Check sqlx-data.json is up to date
              run: sqlx prepare --check --workspace

            - name: Run tests 
              run: cargo test
    fmt:
        name: Rustfmt
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@stable
              with:
                components: rustfmt
            - name: Enforce formatting
              run: cargo fmt --check
    clippy:
        name: Clippy Lint
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:14
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: password
              POSTGRES_DB: postgres
            ports:
              - 5432:5432
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install the Rust toolchain with clippya
              uses: dtolnay/rust-toolchain@stable
              with:
                components: clippy

            - name: Rust cache action
              uses: Swatinem/rust-cache@v2
              with: 
                key: sqlx-${{ env.SQLX_VERSION}}

            - name: Install SQLx CLI
              run: cargo install sqlx-cli 
                --version=${{ env.SQLX_VERSION }}
                --no-default-features 
                --features ${{ env.SQLX_FEATURES }}
                --locked
            
            - name: Install psql
              run: sudo apt-get update && sudo apt-get install postgresql-client -y
            
            - name: Run migrations
              run: SKIP_DOCKER=true ./scripts/init_db.sh

            - name: Run clippy
              run: cargo clippy -- -D warnings

    coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:14
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: password
              POSTGRES_DB: postgres
            ports:
              - 5432:5432
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install the Rust toolchain with clippya
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache action
              uses: Swatinem/rust-cache@v2
              with: 
                key: sqlx-${{ env.SQLX_VERSION}}

            - name: Install SQLx CLI
              run: cargo install sqlx-cli 
                --version=${{ env.SQLX_VERSION }}
                --no-default-features 
                --features ${{ env.SQLX_FEATURES }}
                --locked

            - name: Install psql
              run: sudo apt-get update && sudo apt-get install postgresql-client -y
            
            - name: Run migrations
              run: SKIP_DOCKER=true ./scripts/init_db.sh

            - name: Generate code coverage
              run: |
                cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace
